package org.mskcc.cbio.clinicaldata.cbiodata.model;

import java.util.ArrayList;
import java.util.List;

public class CbioClinicalEventDataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public CbioClinicalEventDataExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCLINICAL_EVENT_IDIsNull() {
            addCriterion("CLINICAL_EVENT_ID is null");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDIsNotNull() {
            addCriterion("CLINICAL_EVENT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDEqualTo(Integer value) {
            addCriterion("CLINICAL_EVENT_ID =", value, "CLINICAL_EVENT_ID");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDNotEqualTo(Integer value) {
            addCriterion("CLINICAL_EVENT_ID <>", value, "CLINICAL_EVENT_ID");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDGreaterThan(Integer value) {
            addCriterion("CLINICAL_EVENT_ID >", value, "CLINICAL_EVENT_ID");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDGreaterThanOrEqualTo(Integer value) {
            addCriterion("CLINICAL_EVENT_ID >=", value, "CLINICAL_EVENT_ID");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDLessThan(Integer value) {
            addCriterion("CLINICAL_EVENT_ID <", value, "CLINICAL_EVENT_ID");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDLessThanOrEqualTo(Integer value) {
            addCriterion("CLINICAL_EVENT_ID <=", value, "CLINICAL_EVENT_ID");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDIn(List<Integer> values) {
            addCriterion("CLINICAL_EVENT_ID in", values, "CLINICAL_EVENT_ID");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDNotIn(List<Integer> values) {
            addCriterion("CLINICAL_EVENT_ID not in", values, "CLINICAL_EVENT_ID");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDBetween(Integer value1, Integer value2) {
            addCriterion("CLINICAL_EVENT_ID between", value1, value2, "CLINICAL_EVENT_ID");
            return (Criteria) this;
        }

        public Criteria andCLINICAL_EVENT_IDNotBetween(Integer value1, Integer value2) {
            addCriterion("CLINICAL_EVENT_ID not between", value1, value2, "CLINICAL_EVENT_ID");
            return (Criteria) this;
        }

        public Criteria andKEYIsNull() {
            addCriterion("KEY is null");
            return (Criteria) this;
        }

        public Criteria andKEYIsNotNull() {
            addCriterion("KEY is not null");
            return (Criteria) this;
        }

        public Criteria andKEYEqualTo(String value) {
            addCriterion("KEY =", value, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYNotEqualTo(String value) {
            addCriterion("KEY <>", value, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYGreaterThan(String value) {
            addCriterion("KEY >", value, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYGreaterThanOrEqualTo(String value) {
            addCriterion("KEY >=", value, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYLessThan(String value) {
            addCriterion("KEY <", value, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYLessThanOrEqualTo(String value) {
            addCriterion("KEY <=", value, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYLike(String value) {
            addCriterion("KEY like", value, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYNotLike(String value) {
            addCriterion("KEY not like", value, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYIn(List<String> values) {
            addCriterion("KEY in", values, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYNotIn(List<String> values) {
            addCriterion("KEY not in", values, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYBetween(String value1, String value2) {
            addCriterion("KEY between", value1, value2, "KEY");
            return (Criteria) this;
        }

        public Criteria andKEYNotBetween(String value1, String value2) {
            addCriterion("KEY not between", value1, value2, "KEY");
            return (Criteria) this;
        }

        public Criteria andVALUEIsNull() {
            addCriterion("VALUE is null");
            return (Criteria) this;
        }

        public Criteria andVALUEIsNotNull() {
            addCriterion("VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andVALUEEqualTo(String value) {
            addCriterion("VALUE =", value, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUENotEqualTo(String value) {
            addCriterion("VALUE <>", value, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUEGreaterThan(String value) {
            addCriterion("VALUE >", value, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUEGreaterThanOrEqualTo(String value) {
            addCriterion("VALUE >=", value, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUELessThan(String value) {
            addCriterion("VALUE <", value, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUELessThanOrEqualTo(String value) {
            addCriterion("VALUE <=", value, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUELike(String value) {
            addCriterion("VALUE like", value, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUENotLike(String value) {
            addCriterion("VALUE not like", value, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUEIn(List<String> values) {
            addCriterion("VALUE in", values, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUENotIn(List<String> values) {
            addCriterion("VALUE not in", values, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUEBetween(String value1, String value2) {
            addCriterion("VALUE between", value1, value2, "VALUE");
            return (Criteria) this;
        }

        public Criteria andVALUENotBetween(String value1, String value2) {
            addCriterion("VALUE not between", value1, value2, "VALUE");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table clinical_event_data
     *
     * @mbggenerated do_not_delete_during_merge Mon Apr 20 14:27:25 EDT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table clinical_event_data
     *
     * @mbggenerated Mon Apr 20 14:27:25 EDT 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}